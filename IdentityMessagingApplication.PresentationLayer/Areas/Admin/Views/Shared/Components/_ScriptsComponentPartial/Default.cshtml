    <!-- REQUIRED SCRIPTS -->
<!-- jQuery -->
<script src="~/AdminLTE-3.1.0/plugins/jquery/jquery.min.js"></script>
<!-- Bootstrap -->
<script src="~/AdminLTE-3.1.0/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
<!-- AdminLTE -->
<script src="~/AdminLTE-3.1.0/dist/js/adminlte.js"></script>

<!-- OPTIONAL SCRIPTS -->
@* <script src="~/AdminLTE-3.1.0/plugins/chart.js/Chart.min.js"></script> *@
@* <!-- AdminLTE for demo purposes -->
<script src="~/AdminLTE-3.1.0/dist/js/demo.js"></script>
<!-- AdminLTE dashboard demo (This is only for demo purposes) -->
<script src="~/AdminLTE-3.1.0/dist/js/pages/dashboard3.js"></script>

<script src="~/AdminLTE-3.1.0/dist/js/adminlte.min.js"></script> *@
@* MessageListler için seçim yaptıran script *@
<script>
    $(function () {
        //Enable check and uncheck all functionality
        $('.checkbox-toggle').click(function () {
            var clicks = $(this).data('clicks')
            if (clicks) {
                //Uncheck all checkboxes
                $('.mailbox-messages input[type=\'checkbox\']').prop('checked', false)
                $('.checkbox-toggle .far.fa-check-square').removeClass('fa-check-square').addClass('fa-square')
            } else {
                //Check all checkboxes
                $('.mailbox-messages input[type=\'checkbox\']').prop('checked', true)
                $('.checkbox-toggle .far.fa-square').removeClass('fa-square').addClass('fa-check-square')
            }
            $(this).data('clicks', !clicks)
        })

        //Handle starring for font awesome
        $('.mailbox-star').click(function (e) {
            e.preventDefault()
            //detect type
            var $this = $(this).find('a > i')
            var fa = $this.hasClass('fa')

            //Switch states
            if (fa) {
                $this.toggleClass('fa-star')
                $this.toggleClass('fa-star-o')
            }
        });
    });

    $(function () {
        // Summernote
        $('#summernote').summernote()

        // CodeMirror
        CodeMirror.fromTextArea(document.getElementById("codeMirrorDemo"), {
            mode: "htmlmixed",
            theme: "monokai"
        });
    });

    $('#btn-MakeUnImportant').click(function () {
        var messageIds = [];
        $('.mailbox-messages input[type="checkbox"]:checked').each(function () {
            messageIds.push($(this).val());
        });

        // Konsola yazdırarak kontrol edin
        console.log('Selected messageIds:', messageIds);

        if (messageIds.length === 0) {
            Swal.fire({
                icon: 'warning',
                title: 'Uyarı',
                text: 'Lütfen en az bir mesaj seçin!',
                confirmButtonText: 'Tamam'
            });
        } else {
            Swal.fire({
                title: 'Emin misiniz?',
                text: "Seçili mesajlar önemli kutusundan çıkarılacak!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Evet, işaretle!',
                cancelButtonText: 'Hayır, vazgeç'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("MakeMessagesUnImportant", "Message", new { Area = "Admin" })',
                        contentType: "application/json",
                        data: JSON.stringify(messageIds), // Düzgün bir JSON yapısı olmalı
                        success: function (response3) {
                            if (response3.success) {
                                Swal.fire('Başarılı!', response3.message, 'success');
                                location.reload(); // Sayfayı yenile
                            } else {
                                Swal.fire('Hata!', response3.message, 'error');
                            }
                        },
                        error: function () {
                            Swal.fire('Hata!', 'İşlem sırasında bir hata oluştu.', 'error');
                        }
                    });
                }
            });
        }
    });

    $('#btn-MakeUnJunk').click(function () {
        var messageIds = [];
        $('.mailbox-messages input[type="checkbox"]:checked').each(function () {
            messageIds.push($(this).val());
        });

        // Konsola yazdırarak kontrol edin
        console.log('Selected messageIds:', messageIds);

        if (messageIds.length === 0) {
            Swal.fire({
                icon: 'warning',
                title: 'Uyarı',
                text: 'Lütfen en az bir mesaj seçin!',
                confirmButtonText: 'Tamam'
            });
        } else {
            Swal.fire({
                title: 'Emin misiniz?',
                text: "Seçili mesajlar çöp kutusundan alınacak!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Evet, işaretle!',
                cancelButtonText: 'Hayır, vazgeç'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("MakeMessagesUnJunk", "Message", new { Area = "Admin" })',
                        contentType: "application/json",
                        data: JSON.stringify(messageIds), // Düzgün bir JSON yapısı olmalı
                        success: function (response3) {
                            if (response3.success) {
                                Swal.fire('Başarılı!', response3.message, 'success');
                                location.reload(); // Sayfayı yenile
                            } else {
                                Swal.fire('Hata!', response3.message, 'error');
                            }
                        },
                        error: function () {
                            Swal.fire('Hata!', 'İşlem sırasında bir hata oluştu.', 'error');
                        }
                    });
                }
            });
        }
    });


    $('#btn-MakeJunk').click(function () {
        var messageIds = [];
        $('.mailbox-messages input[type="checkbox"]:checked').each(function () {
            messageIds.push($(this).val());
        });

        // Konsola yazdırarak kontrol edin
        console.log('Selected messageIds:', messageIds);

        if (messageIds.length === 0) {
            Swal.fire({
                icon: 'warning',
                title: 'Uyarı',
                text: 'Lütfen en az bir mesaj seçin!',
                confirmButtonText: 'Tamam'
            });
        } else {
            Swal.fire({
                title: 'Emin misiniz?',
                text: "Seçili mesajlar çöp kutusuna taşınacak!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Evet, işaretle!',
                cancelButtonText: 'Hayır, vazgeç'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("MakeMessagesJunk", "Message", new { Area = "Admin" })',
                        contentType: "application/json",
                        data: JSON.stringify(messageIds), // Düzgün bir JSON yapısı olmalı
                        success: function (response3) {
                            if (response3.success) {
                                Swal.fire('Başarılı!', response3.message, 'success');
                                location.reload(); // Sayfayı yenile
                            } else {
                                Swal.fire('Hata!', response3.message, 'error');
                            }
                        },
                        error: function () {
                            Swal.fire('Hata!', 'İşlem sırasında bir hata oluştu.', 'error');
                        }
                    });
                }
            });
        }
    });
    $('#btn-MakeImportant').click(function () {
        var messageIds = [];
        $('.mailbox-messages input[type="checkbox"]:checked').each(function () {
            messageIds.push($(this).val());
        });

        // Konsola yazdırarak kontrol edin
        console.log('Selected messageIds:', messageIds);

        if (messageIds.length === 0) {
            Swal.fire({
                icon: 'warning',
                title: 'Uyarı',
                text: 'Lütfen en az bir mesaj seçin!',
                confirmButtonText: 'Tamam'
            });
        } else {
            Swal.fire({
                title: 'Emin misiniz?',
                text: "Seçili mesajlar önemli olarak işaretlenecek!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Evet, işaretle!',
                cancelButtonText: 'Hayır, vazgeç'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("MakeMessagesImportant", "Message", new { Area = "Admin" })',
                        contentType: "application/json",
                        data: JSON.stringify(messageIds), // Düzgün bir JSON yapısı olmalı
                        success: function (response3) {
                            if (response3.success) {
                                Swal.fire('Başarılı!', response3.message, 'success');
                                location.reload(); // Sayfayı yenile
                            } else {
                                Swal.fire('Hata!', response3.message, 'error');
                            }
                        },
                        error: function () {
                            Swal.fire('Hata!', 'İşlem sırasında bir hata oluştu.', 'error');
                        }
                    });
                }
            });
        }
    });

    function loadUserList() {
        $.ajax({
            type: "get",
            url: "/Admin/User/JSUserList",
            success: function (data) {
                // Veriyi parse edip HTML'e yerleştirin
                let users = JSON.parse(data);
                let tableBody = $("#userList tbody");
                tableBody.empty();
                let count = 0;
                users.forEach(function (item) {
                    count++;
                    // BirthDay alanını formatlama
                    let row = `<tr>
                                                 <td>${count}</td>
                                                  <input type="hidden" name="${item.Id}" id="${item.Id}" value="${item.Id}" />
                                                 <td><img src="${item.ImageUrl}" style="height:70px;width:60px" /></td>
                                                 <td>${item.Name} ${item.Surname}</td>
                                                 <td>${item.UserName}</td>
                                                 <td>Kullanıcı</td>
                                                 <td>${item.City}</td>
                                                <td>${item.Profession}</td>
                                                <td>${item.Phone}</td>
                                                <td>${item.SenderMessage.Count()}</td>
                                                <td>${item.ReceiverMessage.Count()}</td>
                                                  <td>
                                                 <a href="/Admin/User/ChangeIsApprovedUser/${item.Id}">
                                                  ${item.IsApproved ? '<i style="color:mediumseagreen;font-size:20px" class="fas fa-check-square"></i>' : '<i style="color:palevioletred;font-size:20px" class="fas fa-times-circle"></i>'}
                                                  </a>
                                                 </td>
                                                 <td>
                                                          <button class="btn btn-info btn-userMessageDetail" data-id="${item.Id}" data-toggle="modal" data-target="#userMessageDetailPanel"><i class="fas fa-info"></i></button>
                                                 </td>
                                                  <td>
                                                 <button class="btn btn-danger btn-delete" data-id="${item.Id}"><i class="fas fa-trash-alt"></i></button>
                                                  </td>
                                                 <td>
                                                       <button class="btn btn-warning btn-update" data-id="${item.Id}" data-toggle="modal" data-target="#UpdateUser"><i class="fas fa-sync"></i></button>
                                                 </td>
                                                 </tr>`;
                    tableBody.append(row);
                });
            }
        });
    }

    $("#btnuserUpdate").click(function () {
        var formData = new FormData();
        formData.append("Id", $("#UpdateUserId").val());
        formData.append("UserName", $("#UpdateUserUsername").val());
        formData.append("Name", $("#UpdateUserName").val());
        formData.append("Surname", $("#UpdateUserSurname").val());
        formData.append("About", $("#UpdateUserAbout").val());
        formData.append("Profession", $("#UpdateUserProfession").val());
        formData.append("City", $("#UpdateUserCity").val());
        formData.append("Phone", $("#UpdateUserPhone").val());
        formData.append("Email", $("#UpdateUserEmail").val());

        // Tarih bilgisini doğrudan al
        var birthDateValue = $("#UpdateUserBirthDay").val();
        formData.append("BirthDay", birthDateValue); // ISO formatına dönüşüm gereksiz

        var imageFile = $("#Image")[0].files[0];
        if (imageFile) {
            formData.append("Image", imageFile);
        }

        $.ajax({
            url: "/Admin/User/JSUpdateUser/",
            data: formData,
            type: "POST",
            contentType: false,
            processData: false,
            success: function (response) {
                if (response.success) {
                    Swal.fire({
                        title: "Güncelleme İşlemi Başarılı!",
                        text: "Kullanıcı bilgileri başarıyla güncellendi.",
                        icon: "success"
                    });
                    $("#btnUpdateClose").click();
                    loadUserList();
                } else {
                    Swal.fire({
                        title: "Hata!",
                        text: response.message,
                        icon: "error"
                    });
                }
            },
            error: function () {
                Swal.fire({
                    title: "Beklenmeyen Hata!",
                    text: "Bir hata oluştu, lütfen tekrar deneyin.",
                    icon: "error"
                });
            }
        });
    });

    $("#userList").on('click', '.btn-update', function () {
        let userId = $(this).data("id");
        console.log(userId);
        $.ajax({
            url: "/Admin/User/GetUser/" + userId,
            type: "GET",
            dataType: "json",
            success: function (funkGetUser) {
                let response = JSON.parse(funkGetUser);
                // BirthDay alanını formatlama
                let birthDateFormatted = "";
                if (response.BirthDay) {
                    let birthDate = new Date(response.BirthDay);
                    birthDateFormatted = birthDate.toISOString().split('T')[0]; // YYYY-MM-DD formatı
                }
                console.log(response);
                // Ürün bilgilerini popup içinde doldur
                $("#UpdateUserName").val(response.Name);
                $("#UpdateUserId").val(response.Id);
                $("#UpdateUserSurname").val(response.Surname);
                $("#UpdateUserAbout").val(response.About);
                $("#UpdateUserImage").attr("src", response.ImageUrl);
                $("#UpdateUserUsername").val(response.UserName);
                $("#UpdateUserPhone").val(response.Phone);
                $("#UpdateUserProfession").val(response.Profession);
                $("#UpdateUserCity").val(response.City);
                $("#UpdateUserBirthDay").val(birthDateFormatted);
                $("#UpdateUserEmail").val(response.Email);
                $("#UpdateUserRole").val(response.Role);
                // Popup'ı göster

            },
            error: function () {
                Swal.fire({
                    title: "HATA",
                    text: "Kullanıcı bilgileri yüklenemedi.",
                    icon: "warning"
                });
            }
        });
    });

    $("#userList").on('click', '.btn-userMessageDetail', function () {
        let userId = $(this).data("id");
        console.log(userId);
        $.ajax({
            url: "/Admin/User/GetUserDetail/" + userId,
            type: "GET",
            dataType: "json",
            success: function (funkGetUserMessageDetail) {
                let response = JSON.parse(funkGetUserMessageDetail);
                console.log(response);
                // Ürün bilgilerini popup içinde doldur
                $("#userDetailInfoInbox").val(response.InboxCount);
                $("#userDetailInfoSent").val(response.SentboxCount);
                $("#userDetailInfoDraft").val(response.DraftboxCount);
                $("#userDetailInfoImportant").val(response.ImportantboxCount);
                $("#userDetailInfoJunk").val(response.JunkboxCount);
                // Popup'ı göster

            },
            error: function () {
                Swal.fire({
                    title: "HATA",
                    text: "Kullanıcı bilgileri yüklenemedi.",
                    icon: "warning"
                });
            }
        });
    });



    $(document).ready(function () {
        $("form").submit(function (event) {
            event.preventDefault(); // Formun otomatik olarak gönderilmesini engeller

            var formData = new FormData(this);

            $.ajax({
                type: "POST",
                url: "/Admin/User/MyProfile/", // Controller'da belirtilen Route
                data: formData,
                contentType: false,
                processData: false,
                success: function (response2) {
                    if (response2.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Başarılı!',
                            text: response2.message,
                        }).then(function () {
                            location.reload(); // Sayfayı yenile
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Hata!',
                            text: response2.message,
                        });
                    }
                },
                error: function () {
                    Swal.fire({
                        icon: 'error',
                        title: 'Hata!',
                        text: 'Bir hata oluştu. Lütfen tekrar deneyin.',
                    });
                }
            });
        });
    });

    $("#btnUpdatePassword").click(function () {
        let userPasswords = {
            OldPassword: $("#oldPasswordText").val(),
            NewPassword: $("#newPasswordText").val(),
            ConfirmPassword: $("#confirmPasswordText").val()
        };
        $.ajax({
            url: "/Admin/User/MyProfileChangePassword/",
            data: userPasswords,
            dataType: "json",
            type: "POST",
            success: function (funkUpdatePassword) {
                if (funkUpdatePassword.success) {
                    Swal.fire({
                        title: "Güncelleme İşlemi Başarılı!",
                        text: "Parola başarıyla güncellendi.",
                        icon: "success"
                    });
                    $("#btnUpdatePasswordClose").click();
                } else {
                    Swal.fire({
                        title: "Hata!",
                        text: funkUpdatePassword.message,
                        icon: "error"
                    });
                }
            },
            error: function () {
                Swal.fire({
                    title: "Beklenmeyen Hata!",
                    text: "Bir hata oluştu, lütfen tekrar deneyin.",
                    icon: "error"
                });
            }
        });
    });




    $("#userList").on('click', '.btn-delete', function () {
        let userId = $(this).data('id');
        Swal.fire({
            title: "Kullanıcıyı Silmek İstediğinizden Emin Misiniz?",
            text: "Bu işlemin geri dönüşü olmayacaktır.",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Evet, sil.",
            cancelButtonText: "İptal Et."
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: "post",
                    url: "/Admin/User/DeleteUser/" + userId,
                    contentType: "application/json",
                    dataType: "json",
                    success: function (response) {
                        Swal.fire({
                            title: "İşlem Başarılı!",
                            text: "Seçtiğiniz kullanıcı başarılı bir şekilde silindi.",
                            icon: "success"
                        });
                        loadUserList();
                    }
                });
            }
        });
    });
</script>
